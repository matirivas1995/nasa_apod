{"version":3,"sources":["components/UI/Picture.js","components/UI/Card.js","components/UI/Nav.js","components/NasaPicture.js","App.js","reportWebVitals.js","index.js"],"names":["Picture","props","src","pictureData","url","alt","title","className","Card","classes","children","Nav","to","exact","apiKey","process","NasaPicture","useState","setPictureData","useEffect","a","fetch","res","json","data","fetchPhoto","date","explanation","App","Helmet","charSet","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAYeA,EAVC,SAACC,GACb,OACI,qBACIC,IAAKD,EAAME,YAAYC,IACvBC,IAAKJ,EAAME,YAAYG,MACvBC,UAAU,SCAPC,G,MALF,SAACP,GACV,IAAMQ,EAAU,QAAUR,EAAMM,UAChC,OAAO,qBAAKA,UAAWE,EAAhB,SAA0BR,EAAMS,aCU5BC,G,YAVH,SAACV,GACT,OACI,qBAAKM,UAAU,SAAf,SACI,6BACI,cAAC,IAAD,CAAMA,UAAU,OAAOK,GAAG,IAAIC,OAAK,EAAnC,SAAsCZ,EAAMK,cCFtDQ,EAASC,2CAmCAC,EAjCK,WAChB,MAAsCC,mBAAS,MAA/C,mBAAOd,EAAP,KAAoBe,EAApB,KAeA,OAZAC,qBAAU,WAAM,4CAGZ,8BAAAC,EAAA,sEACsBC,MAAM,+CAAD,OAC4BP,IAFvD,cACUQ,EADV,gBAIuBA,EAAIC,OAJ3B,OAIUC,EAJV,OAKIN,EAAeM,GALnB,4CAHY,0DACZC,KASD,IAEEtB,EAGD,qCACI,cAAC,EAAD,CAAKG,MAlBC,SAmBN,eAAC,EAAD,CAAMC,UAAU,eAAhB,UACI,cAAC,EAAD,CAASJ,YAAaA,IACtB,gCACI,6BAAKA,EAAYG,QACjB,mBAAGC,UAAU,OAAb,SAAqBJ,EAAYuB,OACjC,mBAAGnB,UAAU,cAAb,SAA4BJ,EAAYwB,uBAV/B,yB,gBCDdC,EAjBH,WACV,OACE,gCACE,eAACC,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,yCAFF,OAIA,cAAC,IAAD,UACE,qBAAKvB,UAAU,aAAf,SACE,cAAC,IAAD,CAAOwB,UAAWf,EAAagB,KAAK,cCH/BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.20e1934c.chunk.js","sourcesContent":["import './Picture.css'\n\nconst Picture = (props) => {\n    return (\n        <img\n            src={props.pictureData.url}\n            alt={props.pictureData.title}\n            className=\"pic\"\n        />\n    );\n}\n\nexport default Picture;","import './Card.css';\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Nav.css'\n\nconst Nav = (props) => {\n    return (\n        <div className=\"navbar\">\n            <ul>\n                <Link className=\"link\" to=\"/\" exact >{props.title}</Link>\n            </ul>\n        </div>\n    )\n}\n\nexport default Nav;","import React, { useState, useEffect } from \"react\";\nimport Picture from \"./UI/Picture\";\nimport Card from \"./UI/Card\";\nimport './NasaPicture.css'\nimport Nav from \"./UI/Nav\";\n\nconst apiKey = process.env.REACT_APP_APOD_KEY;\n\nconst NasaPicture = () => {\n    const [pictureData, setPictureData] = useState(null);\n    const title = \"APOD\";\n\n    useEffect(() => {\n        fetchPhoto();\n\n        async function fetchPhoto() {\n            const res = await fetch(\n                `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`\n            );\n            const data = await res.json();\n            setPictureData(data);\n        }\n    }, []);\n\n    if (!pictureData) return <div />;\n\n    return (\n        <>\n            <Nav title={title}/>\n            <Card className=\"nasa-picture\">\n                <Picture pictureData={pictureData} />\n                <div>\n                    <h1>{pictureData.title}</h1>\n                    <p className=\"date\">{pictureData.date}</p>\n                    <p className=\"explanation\">{pictureData.explanation}</p>\n                </div>\n            </Card>\n        </>\n    );\n}\n\nexport default NasaPicture;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport NasaPicture from \"./components/NasaPicture\";\nimport \"./App.css\";\nimport { Helmet } from \"react-helmet\";\n\nconst App = () => {\n  return (\n    <div>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>APOD</title>]\n      </Helmet>\n      <BrowserRouter>\n        <div className=\"App-header\">\n          <Route component={NasaPicture} path=\"/\" />\n        </div>\n      </BrowserRouter>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}